# Start time: 11:39
# End time: 11:45

import aocd, collections, itertools

data = """............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............"""

# data = """T....#....
# ...T......
# .T....#...
# .........#
# ..#.......
# ..........
# ...#......
# ..........
# ....#.....
# .........."""

data = aocd.get_data(year=2024, day=8)


HEIGHT, WIDTH = len(data.split()), len(data.split()[0])

coords = collections.defaultdict(list)
for y, row in enumerate(data.split()):
    for x, char in enumerate(row):
        coords[char] += [(x, y)] if char not in ".#" else []


def get_antinodes(nodes: list[tuple[int, int]]):
    antinodes = set()
    for (x1, y1), (x2, y2) in itertools.permutations(nodes, 2):
        for i in range(WIDTH):
            x, y = (x2 + (i * (x2 - x1)), y2 + (i * (y2 - y1)))
            if 0 <= x < WIDTH and 0 <= y < HEIGHT:
                antinodes.add((x, y))
    return antinodes


anti_nodes = set()
for char, nodes in coords.items():
    anti_nodes |= get_antinodes(nodes)

print(len(anti_nodes))
